buildscript {

    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath("com.anatawa12.forge:ForgeGradle:2.3-1.0.+") {
            changing = true
        }
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.6-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: "com.matthewprenger.cursegradle"


sourceCompatibility = 1.8
targetCompatibility = 1.8

version = mod_version
group = "${mod_group}"
ext.version = "${mod_version}"
ext.id = "${mod_id}"
ext.name = "${mod_name}"
ext.author = "${mod_author}"
ext.description = "${mod_description}"
ext.url = "${mod_url}"
ext.loader = "${loader_version.replaceAll("\\..*", "")}"
ext.forge = "${loader_version}"
ext.mc = "${mc_version}"

minecraft {
    version = "${forge_version}"
    runDir = "run"
    useDepAts = true
    mappings = "stable_39"
    
    replaceIn 'src/main/java/com/fuzs/aquaacrobatics/AquaAcrobatics.java'
    replace '@version@', mod_version
    
    /* This workaround is needed to make dev work properly */
    def extraArgs = "-Daquaacrobatics.fghack=true"
    
    clientJvmArgs += extraArgs
    clientJvmArgs += "-Dmixin.debug.export=true"
    serverJvmArgs += extraArgs
    clientJvmArgs += "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
}

repositories {
    mavenLocal()
    maven { url = "https://repo.spongepowered.org/repository/maven-public" }
    //maven { url "https://maven.mcmoddev.com/" }
    maven {
        url "https://cursemaven.com"
    }
    ivy {
        url "https://witchery-api.msrandom.net/download/"
        layout "pattern", {
            artifact "[organisation]/[artifact].[ext]"
        }
    }
    maven {
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven { url = "http://maven.cil.li/" }
}

dependencies {
    //deobfProvided "net.ilexiconn:llibrary-core:1.0.11-1.12.2"
    //deobfProvided "net.ilexiconn:llibrary:1.7.9-1.12.2"
    deobfProvided "appeng:appliedenergistics2:rv6-stable-7"
    deobfProvided "curse.maven:artemislib-313590:2741812:"
    deobfCompile "curse.maven:baubles-227083:2518667:"
    deobfProvided "curse.maven:betweenlands-243363:3540287:"
    deobfProvided "curse.maven:chiseledme-250075:3467731"
    deobfProvided "curse.maven:endercore-231868:2972849:"
    deobfProvided "curse.maven:enderio-64578:3328811:"
    deobfProvided "curse.maven:hats-229073:2960397:"
    deobfProvided "curse.maven:ichunutil-229060:2801262:"
    deobfProvided "curse.maven:journeymap-32274:2916002:"
    deobfProvided "curse.maven:mobends-231347:3573346:"
    deobfProvided "curse.maven:morph-229080:2995522:"
    runtimeOnly "curse.maven:naturescompass-252848:2893527:"
    deobfProvided "curse.maven:thaumcraft-223628:2629023"
    deobfProvided "curse.maven:thaumicaugmentation-319441:3536155:"
    deobfProvided "curse.maven:trinketsandbaubles-279900:3575174:"
    deobfProvided "curse.maven:wings-302584:2829351:"
    deobfProvided "curse.maven:xaerosminimap-263420:3630494:"
    deobfCompile "curse.maven:mixinbooter-419286:3575119:"
    compileOnly files('deps/GalacticraftCore-1.12.2-4.0.2.280-deobf.jar')
    compileOnly files('deps/MicdoodleCore-1.12.2-4.0.2.280-deobf.jar')
    compileOnly 'WitcheryResurrected0.5.2Hotfix4:WitcheryResurrected-1.12.2-0.5.2.4-forge-all'

    compile ("org.spongepowered:mixin:0.8.3") {

        exclude module: "asm-commons"
        exclude module: "asm-tree"
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "log4j-core"
        exclude module: "gson"
        exclude module: "commons-io"
    }
}

sourceSets {
    main {
        ext.refMap = "mixins.${project.ext.id}.refmap.json"
    }
}


processResources {

    // this will ensure that this task is redone when the versions change.
    inputs.property "mod_id", project.ext.id
    inputs.property "mod_name", project.ext.name
    inputs.property "mod_name2", project.ext.name.replaceAll("\\s", "")
    inputs.property "mod_version", project.ext.version
    inputs.property "mod_group", project.group
    inputs.property "mod_url", project.ext.url
    inputs.property "mod_description", project.ext.description
    inputs.property "mod_author", project.ext.author
    inputs.property "loader_version", project.ext.loader
    inputs.property "forge_version", project.ext.forge
    inputs.property "mc_version", project.ext.mc

    // replace stuff in mods.toml and pack.mcmeta
    from(sourceSets.main.resources.srcDirs) {

        include 'mcmod.info', 'pack.mcmeta'

        expand (

                'mod_id': project.ext.id,
                'mod_name': project.ext.name,
                'mod_name2': project.ext.name.replaceAll("\\s", ""),
                'mod_version': project.ext.version,
                'mod_group': project.group,
                'mod_url': project.ext.url,
                'mod_description': project.ext.description,
                'mod_author': project.ext.author,
                'loader_version': project.ext.loader,
                'forge_version': project.ext.forge,
                'mc_version': project.ext.mc
        )
    }

    // copy everything else except mods.toml and pack.mcmeta
    from(sourceSets.main.resources.srcDirs) {

        exclude 'mcmod.info', 'pack.mcmeta'
    }
}

jar {
    manifest {
        attributes "FMLCorePlugin": project.group + ".core." + project.ext.name.replaceAll("\\s", "") + "Core"
        attributes "FMLCorePluginContainsFMLMod": "true"
        attributes "ForceLoadAsMod": "true"
    }
}

jar.finalizedBy('reobfJar')

publishing {

    publications {

        mavenJava (MavenPublication) {

//            artifact sourceJar
//            artifact javadocJar
            from components.java
        }
    }
}

idea { module { inheritOutputDirs = true } }

curseforge {
    if (!file('CHANGELOG.md').canRead()) { throw new FileNotFoundException("Could not read changelog file") }
    apiKey = project.hasProperty('CURSEFORGE_TOKEN') ? project.findProperty('CURSEFORGE_TOKEN') : (System.getenv("CURSEFORGE_TOKEN") != null ? System.getenv("CURSEFORGE_TOKEN") : '')
    project {
        id = project_curse_id
        changelogType = 'markdown'
        changelog = file('CHANGELOG.md')
        releaseType = project_release_type
        addGameVersion 'Forge'
        // add supported game versions separated by comma
        project_game_versions.split(",").each {
            addGameVersion it.trim()
        }
        mainArtifact(jar) {
            displayName = "[FORGE] [${mc_version}] ${rootProject.name}-v${mod_version}"
            relations {
                requiredDependency 'mixinbootstrap'
                optionalDependency 'mixin-booter'
            }
        }
    }
    options {
        javaVersionAutoDetect = false
        forgeGradleIntegration = false
    }
}
